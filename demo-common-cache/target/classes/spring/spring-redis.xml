<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:util="http://www.springframework.org/schema/util" 
    xmlns:cache="http://www.springframework.org/schema/cache" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jee 
       http://www.springframework.org/schema/jee/spring-jee.xsd  
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util  
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache.xsd">


	<!-- redis Spring 配置（YCL）-->

    <!-- jedis 连接池配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大活动对象数   -->    
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <!-- 最大能够保持idel状态的对象数  -->
        <property name="maxIdle" value="${redis.pool.maxIdle}" />  
        <!-- 最小能够保持idel状态的对象数  -->
        <property name="minIdle" value="${redis.pool.minIdle}"/>  
        <!-- 当池内没有返回对象时，最大等待时间    -->
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>  
        <!-- 当调用borrow Object方法时，是否进行有效性检查   -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
        <!-- 当调用return Object方法时，是否进行有效性检查    -->
        <property name="testOnReturn" value="${redis.pool.testOnReturn}" />  
        <!-- 向调用者输出“链接”对象时，是否检测它的空闲超时；   -->
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />  
        <!-- 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3.  -->
        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}" />  
        <!-- 空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1.   -->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />   
    </bean>

    <!-- redis 连接工厂 -->
    <bean id="redisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig" />
        <property name="port" value="${redis.port}" />
        <property name="hostName" value="${redis.host}" />
        <!-- <property name="password" value="${redis.password}" /> -->
        <property name="timeout" value="${redis.pool.timeout}"></property>
    </bean>
    
    <!-- redis 操作模版  -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>        
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>  
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property> 
    </bean>
    
    
    
	<!-- spring RedisBaseDcoImp 配置 -->
	<!-- <bean id="cacheBatchDao" class="cn.dyaoming.cache.dao.RedisBatchImp">
		<property name="redisTemplate">
			<ref bean="redisTemplate" />
		</property>
	</bean> -->
	
	
	<bean id="cacheDao" class="cn.dyaoming.demo.dao.RedisBase2Imp">
		<property name="redisTemplate">
			<ref bean="redisTemplate" />
		</property>
	</bean>
    
    
</beans>


